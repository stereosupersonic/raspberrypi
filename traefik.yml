version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --log.level=DEBUG --entrypoints.web.address=:80
    restart: always
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      # - /var/run/docker.sock:/var/run/docker.sock
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-net

  postgreSql:
    restart: always
    image: michaelmiklis/rpi-monitor
    container_name: postgresdb
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - /data/postgresql/data:/var/lib/postgresql/data
      - /data/backups/postgresql:/backups
    environment:
      - POSTGRES_PASSWORD=postgres_pw
    networks:
      - traefik-net

  rpi-monitor:
    restart: always
    image: michaelmiklis/rpi-monitor
    container_name: rpimon
    networks:
      - traefik-net
    ports:
      - "8888:8888"
    devices:
      - "/dev/vchiq"
      - "/dev/vcs"
    volumes:
      - /opt/vc:/opt/vc/
      - /boot/:/boot/
      - /sys/:/dockerhost/sys/:ro
      - /etc/:/dockerhost/etc/:ro
      - /proc/:/dockerhost/proc/:ro
      - /usr/lib/:/dockerhost/usr/lib/:ro
      - ./usr-lib:/var/lib/rpimonitor/stat/

  whoami:
    # A container that exposes an API to show its IP address
    restart: always
    image: containous/whoami
    container_name: "simple-service"
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.deimel.de`)"
      - "traefik.http.routers.whoami.entrypoints=web"

  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/portainer:/data

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - '8083:8083'
      - '8086:8086'
      - '8090:8090'
    environment:
      - INFLUXDB_DB=db0
    networks:
      - traefik-net
    volumes:
      # Data persistency
      # mkdir -p /data/influxdb
      - /data/influxdb/:/var/lib/influxdb

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    networks:
     - traefik-net
    links:
      - influxdb
    environment:
      - LD_LIBRARY_PATH: /opt/vc/lib
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /opt/vc:/opt/vc
      - /usr/lib/:/dockerhost/usr/lib/:ro

  grafana:
    image: grafana/grafana:7.3.5
    restart: always
    ports:
      - 3100:3000
    volumes:
      - /data/grafana:/var/lib/grafana
    networks:
      - traefik-net
    links:
      - influxdb
    user: '1001'

networks:
  traefik-net:
    external: true
